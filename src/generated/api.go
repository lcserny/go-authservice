// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * auth-service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package generated

import (
	"context"
	"net/http"
)



// CreateUserResourceAPIRouter defines the required methods for binding the api requests to a responses for the CreateUserResourceAPI
// The CreateUserResourceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CreateUserResourceAPIServicer to perform the required actions, then write the service results to the http response.
type CreateUserResourceAPIRouter interface { 
	Register(http.ResponseWriter, *http.Request)
}
// GetSingleUserAPIRouter defines the required methods for binding the api requests to a responses for the GetSingleUserAPI
// The GetSingleUserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GetSingleUserAPIServicer to perform the required actions, then write the service results to the http response.
type GetSingleUserAPIRouter interface { 
	GetUser(http.ResponseWriter, *http.Request)
}
// GetUsersResourceAPIRouter defines the required methods for binding the api requests to a responses for the GetUsersResourceAPI
// The GetUsersResourceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GetUsersResourceAPIServicer to perform the required actions, then write the service results to the http response.
type GetUsersResourceAPIRouter interface { 
	GetUsers(http.ResponseWriter, *http.Request)
}
// LoginAPIRouter defines the required methods for binding the api requests to a responses for the LoginAPI
// The LoginAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LoginAPIServicer to perform the required actions, then write the service results to the http response.
type LoginAPIRouter interface { 
	SignIn(http.ResponseWriter, *http.Request)
}
// LogoutAPIRouter defines the required methods for binding the api requests to a responses for the LogoutAPI
// The LogoutAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LogoutAPIServicer to perform the required actions, then write the service results to the http response.
type LogoutAPIRouter interface { 
	SignOut(http.ResponseWriter, *http.Request)
}
// RefreshTokenAPIRouter defines the required methods for binding the api requests to a responses for the RefreshTokenAPI
// The RefreshTokenAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RefreshTokenAPIServicer to perform the required actions, then write the service results to the http response.
type RefreshTokenAPIRouter interface { 
	Refresh(http.ResponseWriter, *http.Request)
}
// UpdateSingleUserDataAPIRouter defines the required methods for binding the api requests to a responses for the UpdateSingleUserDataAPI
// The UpdateSingleUserDataAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UpdateSingleUserDataAPIServicer to perform the required actions, then write the service results to the http response.
type UpdateSingleUserDataAPIRouter interface { 
	UpdateUser(http.ResponseWriter, *http.Request)
}


// CreateUserResourceAPIServicer defines the api actions for the CreateUserResourceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CreateUserResourceAPIServicer interface { 
	Register(context.Context, string, string, string, string) (ImplResponse, error)
}


// GetSingleUserAPIServicer defines the api actions for the GetSingleUserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GetSingleUserAPIServicer interface { 
	GetUser(context.Context, string) (ImplResponse, error)
}


// GetUsersResourceAPIServicer defines the api actions for the GetUsersResourceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GetUsersResourceAPIServicer interface { 
	GetUsers(context.Context, int32, int32, string, string, string) (ImplResponse, error)
}


// LoginAPIServicer defines the api actions for the LoginAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LoginAPIServicer interface { 
	SignIn(context.Context, UserRegistration) (ImplResponse, error)
}


// LogoutAPIServicer defines the api actions for the LogoutAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LogoutAPIServicer interface { 
	SignOut(context.Context) (ImplResponse, error)
}


// RefreshTokenAPIServicer defines the api actions for the RefreshTokenAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RefreshTokenAPIServicer interface { 
	Refresh(context.Context) (ImplResponse, error)
}


// UpdateSingleUserDataAPIServicer defines the api actions for the UpdateSingleUserDataAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UpdateSingleUserDataAPIServicer interface { 
	UpdateUser(context.Context, string, UserData) (ImplResponse, error)
}
