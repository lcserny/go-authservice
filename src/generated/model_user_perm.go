// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * auth-service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package generated


import (
	"fmt"
)



type UserPerm string

// List of UserPerm
const (
	READ UserPerm = "READ"
	WRITE UserPerm = "WRITE"
)

// AllowedUserPermEnumValues is all the allowed values of UserPerm enum
var AllowedUserPermEnumValues = []UserPerm{
	"READ",
	"WRITE",
}

// validUserPermEnumValue provides a map of UserPerms for fast verification of use input
var validUserPermEnumValues = map[UserPerm]struct{}{
	"READ": {},
	"WRITE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UserPerm) IsValid() bool {
	_, ok := validUserPermEnumValues[v]
	return ok
}

// NewUserPermFromValue returns a pointer to a valid UserPerm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUserPermFromValue(v string) (UserPerm, error) {
	ev := UserPerm(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for UserPerm: valid values are %v", v, AllowedUserPermEnumValues)
}



// AssertUserPermRequired checks if the required fields are not zero-ed
func AssertUserPermRequired(obj UserPerm) error {
	return nil
}

// AssertUserPermConstraints checks if the values respects the defined constraints
func AssertUserPermConstraints(obj UserPerm) error {
	return nil
}
